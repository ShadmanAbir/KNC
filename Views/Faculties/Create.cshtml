@model KNC.Models.Faculty

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4 class="mb-4 text-primary fw-bold">Faculty Information</h4>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="card shadow p-4">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.CurrentAddress, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.CurrentAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.PermanentAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.EducationalQualification, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.EducationalQualification, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EducationalQualification, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.TeachingExperience, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.TeachingExperience, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TeachingExperience, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.ClinicalExperience, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ClinicalExperience, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClinicalExperience, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.LocalPublication, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.LocalPublication, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LocalPublication, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.InternationalPublication, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.InternationalPublication, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InternationalPublication, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Designation, ViewBag.DesignationList as SelectList, "", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 align-items-center">
                <div class="input-group input-group-outline">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.JoiningDate, new { @class = "form-control flatpickr", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                    
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="text-end">
        <input type="submit" value="Create" class="btn btn-primary" />
        @*@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ms-2" })*@
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    flatpickr(".flatpickr", {
        dateFormat: "Y-m-d", // matches the backend format
        allowInput: true,
        altInput: true,
        altFormat: "F j, Y", // e.g., May 15, 2025
        // Add more options if you like: minDate, maxDate, etc.
    });
</script>
}
